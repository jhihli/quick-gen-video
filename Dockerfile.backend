# Backend Dockerfile for TKVGen
# Multi-stage build for Node.js/Express backend with FFmpeg support

# Development stage
FROM node:18-bullseye as development

# Install FFmpeg and other dependencies
RUN apt-get update && apt-get install -y \
    ffmpeg \
    python3 \
    python3-pip \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Verify FFmpeg installation
RUN ffmpeg -version && ffprobe -version

# Set working directory
WORKDIR /app

# Create necessary directories with proper permissions
RUN mkdir -p public/uploads public/temp-videos public/videos/temp_clips/preprocessed public/local-music \
    && chmod -R 755 public

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=development

# Copy source code
COPY . .

# Copy local music files if they exist
COPY public/local-music ./public/local-music

# Expose port
EXPOSE 5003

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:5003/api/health || exit 1

# Development command with nodemon
CMD ["npm", "run", "server"]

# Production stage
FROM node:18-bullseye-slim as production

# Install FFmpeg and essential tools
RUN apt-get update && apt-get install -y \
    ffmpeg \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user for security
RUN groupadd -r tkvgen && useradd -r -g tkvgen tkvgen

# Set working directory
WORKDIR /app

# Create directories with proper ownership
RUN mkdir -p public/uploads public/temp-videos public/videos/temp_clips/preprocessed public/local-music \
    && chown -R tkvgen:tkvgen /app

# Copy package files
COPY package*.json ./

# Install only production dependencies
RUN npm ci --only=production && npm cache clean --force

# Copy application code
COPY --chown=tkvgen:tkvgen . .

# Copy local music files
COPY --chown=tkvgen:tkvgen public/local-music ./public/local-music

# Switch to non-root user
USER tkvgen

# Expose port
EXPOSE 5003

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:5003/api/health || exit 1

# Production command
CMD ["npm", "start"]